ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	htim4
  21              		.section	.bss.htim4,"aw",%nobits
  22              		.align	2
  25              	htim4:
  26 0000 00000000 		.space	72
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.global	gElapsed
  28              		.section	.bss.gElapsed,"aw",%nobits
  29              		.align	2
  32              	gElapsed:
  33 0000 00000000 		.space	4
  34              		.section	.text.main,"ax",%progbits
  35              		.align	1
  36              		.global	main
  37              		.syntax unified
  38              		.thumb
  39              		.thumb_func
  41              	main:
  42              	.LFB130:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 2


  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** //SCB->CPACR |= (0xF << 20);
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** volatile uint32_t gElapsed;
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** static void MX_TIM4_Init(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  43              		.loc 1 66 1
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 16
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 3


  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 84B0     		sub	sp, sp, #16
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 24
  55 0004 00AF     		add	r7, sp, #0
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 7
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c ****   uint32_t i;
  69:Core/Src/main.c ****   volatile float d_mm;
  70:Core/Src/main.c ****   volatile float d_mm2;
  71:Core/Src/main.c ****   uint32_t timeout;
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  58              		.loc 1 77 3
  59 0006 FFF7FEFF 		bl	HAL_Init
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  60              		.loc 1 84 3
  61 000a FFF7FEFF 		bl	SystemClock_Config
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  62              		.loc 1 91 3
  63 000e FFF7FEFF 		bl	MX_GPIO_Init
  92:Core/Src/main.c ****   MX_TIM4_Init();
  64              		.loc 1 92 3
  65 0012 FFF7FEFF 		bl	MX_TIM4_Init
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c ****   HAL_TIM_IC_Start(&htim4,TIM_CHANNEL_1);
  66              		.loc 1 94 3
  67 0016 0021     		movs	r1, #0
  68 0018 2D48     		ldr	r0, .L8
  69 001a FFF7FEFF 		bl	HAL_TIM_IC_Start
  95:Core/Src/main.c ****   HAL_TIM_IC_Start_IT(&htim4,TIM_CHANNEL_2);
  70              		.loc 1 95 3
  71 001e 0421     		movs	r1, #4
  72 0020 2B48     		ldr	r0, .L8
  73 0022 FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
  74              	.L7:
  96:Core/Src/main.c ****   /* USER CODE END 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Infinite loop */
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 4


  99:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 100:Core/Src/main.c ****   while (1)
 101:Core/Src/main.c ****   {
 102:Core/Src/main.c ****     if (!HAL_GPIO_ReadPin(BUTTON_1_GPIO_Port, BUTTON_1_Pin))
  75              		.loc 1 102 10
  76 0026 4FF40041 		mov	r1, #32768
  77 002a 2A48     		ldr	r0, .L8+4
  78 002c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  79 0030 0346     		mov	r3, r0
  80              		.loc 1 102 8
  81 0032 002B     		cmp	r3, #0
  82 0034 08D1     		bne	.L2
 103:Core/Src/main.c ****     {
 104:Core/Src/main.c ****       while (!HAL_GPIO_ReadPin(BUTTON_1_GPIO_Port, BUTTON_1_Pin));
  83              		.loc 1 104 13
  84 0036 00BF     		nop
  85              	.L3:
  86              		.loc 1 104 15 discriminator 1
  87 0038 4FF40041 		mov	r1, #32768
  88 003c 2548     		ldr	r0, .L8+4
  89 003e FFF7FEFF 		bl	HAL_GPIO_ReadPin
  90 0042 0346     		mov	r3, r0
  91              		.loc 1 104 14 discriminator 1
  92 0044 002B     		cmp	r3, #0
  93 0046 F7D0     		beq	.L3
  94              	.L2:
 105:Core/Src/main.c ****     }
 106:Core/Src/main.c ****     HAL_GPIO_WritePin(HCSR04_TRIGGER_GPIO_Port,HCSR04_TRIGGER_Pin, 1);
  95              		.loc 1 106 5
  96 0048 0122     		movs	r2, #1
  97 004a 4FF40051 		mov	r1, #8192
  98 004e 2148     		ldr	r0, .L8+4
  99 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107:Core/Src/main.c ****     HAL_Delay(1);
 100              		.loc 1 107 5
 101 0054 0120     		movs	r0, #1
 102 0056 FFF7FEFF 		bl	HAL_Delay
 108:Core/Src/main.c ****     htim4.Instance->CNT = 0;
 103              		.loc 1 108 10
 104 005a 1D4B     		ldr	r3, .L8
 105 005c 1B68     		ldr	r3, [r3]
 106              		.loc 1 108 25
 107 005e 0022     		movs	r2, #0
 108 0060 5A62     		str	r2, [r3, #36]
 109:Core/Src/main.c ****     HAL_TIM_IC_Start(&htim4, TIM_CHANNEL_1);
 109              		.loc 1 109 5
 110 0062 0021     		movs	r1, #0
 111 0064 1A48     		ldr	r0, .L8
 112 0066 FFF7FEFF 		bl	HAL_TIM_IC_Start
 110:Core/Src/main.c ****     HAL_TIM_IC_Start_IT(&htim4, TIM_CHANNEL_2);
 113              		.loc 1 110 5
 114 006a 0421     		movs	r1, #4
 115 006c 1848     		ldr	r0, .L8
 116 006e FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
 111:Core/Src/main.c ****     gElapsed = 0;
 117              		.loc 1 111 14
 118 0072 194B     		ldr	r3, .L8+8
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 5


 119 0074 0022     		movs	r2, #0
 120 0076 1A60     		str	r2, [r3]
 112:Core/Src/main.c ****     timeout = 0;
 121              		.loc 1 112 13
 122 0078 0023     		movs	r3, #0
 123 007a FB60     		str	r3, [r7, #12]
 113:Core/Src/main.c ****     HAL_GPIO_WritePin(HCSR04_TRIGGER_GPIO_Port,HCSR04_TRIGGER_Pin, 0);
 124              		.loc 1 113 5
 125 007c 0022     		movs	r2, #0
 126 007e 4FF40051 		mov	r1, #8192
 127 0082 1448     		ldr	r0, .L8+4
 128 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114:Core/Src/main.c ****     while((gElapsed==0)&&(timeout<10000000))
 129              		.loc 1 114 10
 130 0088 02E0     		b	.L4
 131              	.L6:
 115:Core/Src/main.c ****     {
 116:Core/Src/main.c ****       timeout++;
 132              		.loc 1 116 14
 133 008a FB68     		ldr	r3, [r7, #12]
 134 008c 0133     		adds	r3, r3, #1
 135 008e FB60     		str	r3, [r7, #12]
 136              	.L4:
 114:Core/Src/main.c ****     while((gElapsed==0)&&(timeout<10000000))
 137              		.loc 1 114 20
 138 0090 114B     		ldr	r3, .L8+8
 139 0092 1B68     		ldr	r3, [r3]
 114:Core/Src/main.c ****     while((gElapsed==0)&&(timeout<10000000))
 140              		.loc 1 114 24
 141 0094 002B     		cmp	r3, #0
 142 0096 03D1     		bne	.L5
 114:Core/Src/main.c ****     while((gElapsed==0)&&(timeout<10000000))
 143              		.loc 1 114 24 is_stmt 0 discriminator 1
 144 0098 FB68     		ldr	r3, [r7, #12]
 145 009a 104A     		ldr	r2, .L8+12
 146 009c 9342     		cmp	r3, r2
 147 009e F4D3     		bcc	.L6
 148              	.L5:
 117:Core/Src/main.c ****     }    
 118:Core/Src/main.c ****     d_mm = gElapsed/100;
 149              		.loc 1 118 20 is_stmt 1
 150 00a0 0D4B     		ldr	r3, .L8+8
 151 00a2 1B68     		ldr	r3, [r3]
 152 00a4 0E4A     		ldr	r2, .L8+16
 153 00a6 A2FB0323 		umull	r2, r3, r2, r3
 154 00aa 5B09     		lsrs	r3, r3, #5
 155              		.loc 1 118 10
 156 00ac 07EE903A 		vmov	s15, r3	@ int
 157 00b0 F8EE677A 		vcvt.f32.u32	s15, s15
 158 00b4 C7ED027A 		vstr.32	s15, [r7, #8]
 119:Core/Src/main.c ****     d_mm2 = timeout;
 159              		.loc 1 119 11
 160 00b8 FB68     		ldr	r3, [r7, #12]
 161 00ba 07EE903A 		vmov	s15, r3	@ int
 162 00be F8EE677A 		vcvt.f32.u32	s15, s15
 163 00c2 C7ED017A 		vstr.32	s15, [r7, #4]
 120:Core/Src/main.c ****     HAL_Delay(50);
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 6


 164              		.loc 1 120 5
 165 00c6 3220     		movs	r0, #50
 166 00c8 FFF7FEFF 		bl	HAL_Delay
 102:Core/Src/main.c ****     {
 167              		.loc 1 102 8
 168 00cc ABE7     		b	.L7
 169              	.L9:
 170 00ce 00BF     		.align	2
 171              	.L8:
 172 00d0 00000000 		.word	htim4
 173 00d4 00040240 		.word	1073873920
 174 00d8 00000000 		.word	gElapsed
 175 00dc 80969800 		.word	10000000
 176 00e0 1F85EB51 		.word	1374389535
 177              		.cfi_endproc
 178              	.LFE130:
 180              		.section	.text.SystemClock_Config,"ax",%progbits
 181              		.align	1
 182              		.global	SystemClock_Config
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	SystemClock_Config:
 188              	.LFB131:
 121:Core/Src/main.c ****   }
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****   
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 189              		.loc 1 134 1
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 80
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 94B0     		sub	sp, sp, #80
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 88
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI5:
 203              		.cfi_def_cfa_register 7
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 204              		.loc 1 135 22
 205 0006 07F12003 		add	r3, r7, #32
 206 000a 3022     		movs	r2, #48
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 7


 207 000c 0021     		movs	r1, #0
 208 000e 1846     		mov	r0, r3
 209 0010 FFF7FEFF 		bl	memset
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 210              		.loc 1 136 22
 211 0014 07F10C03 		add	r3, r7, #12
 212 0018 0022     		movs	r2, #0
 213 001a 1A60     		str	r2, [r3]
 214 001c 5A60     		str	r2, [r3, #4]
 215 001e 9A60     		str	r2, [r3, #8]
 216 0020 DA60     		str	r2, [r3, #12]
 217 0022 1A61     		str	r2, [r3, #16]
 218              	.LBB4:
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 219              		.loc 1 140 3
 220 0024 0023     		movs	r3, #0
 221 0026 BB60     		str	r3, [r7, #8]
 222 0028 274B     		ldr	r3, .L14
 223 002a 1B6C     		ldr	r3, [r3, #64]
 224 002c 264A     		ldr	r2, .L14
 225 002e 43F08053 		orr	r3, r3, #268435456
 226 0032 1364     		str	r3, [r2, #64]
 227 0034 244B     		ldr	r3, .L14
 228 0036 1B6C     		ldr	r3, [r3, #64]
 229 0038 03F08053 		and	r3, r3, #268435456
 230 003c BB60     		str	r3, [r7, #8]
 231 003e BB68     		ldr	r3, [r7, #8]
 232              	.LBE4:
 233              	.LBB5:
 141:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 234              		.loc 1 141 3
 235 0040 0023     		movs	r3, #0
 236 0042 7B60     		str	r3, [r7, #4]
 237 0044 214B     		ldr	r3, .L14+4
 238 0046 1B68     		ldr	r3, [r3]
 239 0048 204A     		ldr	r2, .L14+4
 240 004a 43F44043 		orr	r3, r3, #49152
 241 004e 1360     		str	r3, [r2]
 242 0050 1E4B     		ldr	r3, .L14+4
 243 0052 1B68     		ldr	r3, [r3]
 244 0054 03F44043 		and	r3, r3, #49152
 245 0058 7B60     		str	r3, [r7, #4]
 246 005a 7B68     		ldr	r3, [r7, #4]
 247              	.LBE5:
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 144:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 248              		.loc 1 146 36
 249 005c 0123     		movs	r3, #1
 250 005e 3B62     		str	r3, [r7, #32]
 147:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 251              		.loc 1 147 30
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 8


 252 0060 4FF48033 		mov	r3, #65536
 253 0064 7B62     		str	r3, [r7, #36]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 254              		.loc 1 148 34
 255 0066 0223     		movs	r3, #2
 256 0068 BB63     		str	r3, [r7, #56]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 257              		.loc 1 149 35
 258 006a 4FF48003 		mov	r3, #4194304
 259 006e FB63     		str	r3, [r7, #60]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 260              		.loc 1 150 30
 261 0070 1923     		movs	r3, #25
 262 0072 3B64     		str	r3, [r7, #64]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 263              		.loc 1 151 30
 264 0074 C023     		movs	r3, #192
 265 0076 7B64     		str	r3, [r7, #68]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 266              		.loc 1 152 30
 267 0078 0223     		movs	r3, #2
 268 007a BB64     		str	r3, [r7, #72]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 269              		.loc 1 153 30
 270 007c 0423     		movs	r3, #4
 271 007e FB64     		str	r3, [r7, #76]
 154:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 272              		.loc 1 154 7
 273 0080 07F12003 		add	r3, r7, #32
 274 0084 1846     		mov	r0, r3
 275 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 276 008a 0346     		mov	r3, r0
 277              		.loc 1 154 6
 278 008c 002B     		cmp	r3, #0
 279 008e 01D0     		beq	.L11
 155:Core/Src/main.c ****   {
 156:Core/Src/main.c ****     Error_Handler();
 280              		.loc 1 156 5
 281 0090 FFF7FEFF 		bl	Error_Handler
 282              	.L11:
 157:Core/Src/main.c ****   }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 283              		.loc 1 161 31
 284 0094 0F23     		movs	r3, #15
 285 0096 FB60     		str	r3, [r7, #12]
 162:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 286              		.loc 1 163 34
 287 0098 0223     		movs	r3, #2
 288 009a 3B61     		str	r3, [r7, #16]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 289              		.loc 1 164 35
 290 009c 0023     		movs	r3, #0
 291 009e 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 9


 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 292              		.loc 1 165 36
 293 00a0 4FF48053 		mov	r3, #4096
 294 00a4 BB61     		str	r3, [r7, #24]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 295              		.loc 1 166 36
 296 00a6 0023     		movs	r3, #0
 297 00a8 FB61     		str	r3, [r7, #28]
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 298              		.loc 1 168 7
 299 00aa 07F10C03 		add	r3, r7, #12
 300 00ae 0321     		movs	r1, #3
 301 00b0 1846     		mov	r0, r3
 302 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 303 00b6 0346     		mov	r3, r0
 304              		.loc 1 168 6
 305 00b8 002B     		cmp	r3, #0
 306 00ba 01D0     		beq	.L13
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 307              		.loc 1 170 5
 308 00bc FFF7FEFF 		bl	Error_Handler
 309              	.L13:
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 310              		.loc 1 172 1
 311 00c0 00BF     		nop
 312 00c2 5037     		adds	r7, r7, #80
 313              	.LCFI6:
 314              		.cfi_def_cfa_offset 8
 315 00c4 BD46     		mov	sp, r7
 316              	.LCFI7:
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 00c6 80BD     		pop	{r7, pc}
 320              	.L15:
 321              		.align	2
 322              	.L14:
 323 00c8 00380240 		.word	1073887232
 324 00cc 00700040 		.word	1073770496
 325              		.cfi_endproc
 326              	.LFE131:
 328              		.section	.text.MX_TIM4_Init,"ax",%progbits
 329              		.align	1
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 334              	MX_TIM4_Init:
 335              	.LFB132:
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 176:Core/Src/main.c ****   * @param None
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** static void MX_TIM4_Init(void)
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 10


 180:Core/Src/main.c **** {
 336              		.loc 1 180 1
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 40
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              	.LCFI8:
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 8AB0     		sub	sp, sp, #40
 346              	.LCFI9:
 347              		.cfi_def_cfa_offset 48
 348 0004 00AF     		add	r7, sp, #0
 349              	.LCFI10:
 350              		.cfi_def_cfa_register 7
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 351              		.loc 1 186 26
 352 0006 07F11803 		add	r3, r7, #24
 353 000a 0022     		movs	r2, #0
 354 000c 1A60     		str	r2, [r3]
 355 000e 5A60     		str	r2, [r3, #4]
 356 0010 9A60     		str	r2, [r3, #8]
 357 0012 DA60     		str	r2, [r3, #12]
 187:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 358              		.loc 1 187 27
 359 0014 07F11003 		add	r3, r7, #16
 360 0018 0022     		movs	r2, #0
 361 001a 1A60     		str	r2, [r3]
 362 001c 5A60     		str	r2, [r3, #4]
 188:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 363              		.loc 1 188 22
 364 001e 3B46     		mov	r3, r7
 365 0020 0022     		movs	r2, #0
 366 0022 1A60     		str	r2, [r3]
 367 0024 5A60     		str	r2, [r3, #4]
 368 0026 9A60     		str	r2, [r3, #8]
 369 0028 DA60     		str	r2, [r3, #12]
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 193:Core/Src/main.c ****   htim4.Instance = TIM4;
 370              		.loc 1 193 18
 371 002a 334B     		ldr	r3, .L24
 372 002c 334A     		ldr	r2, .L24+4
 373 002e 1A60     		str	r2, [r3]
 194:Core/Src/main.c ****   htim4.Init.Prescaler = 96-1;
 374              		.loc 1 194 24
 375 0030 314B     		ldr	r3, .L24
 376 0032 5F22     		movs	r2, #95
 377 0034 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 11


 195:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 378              		.loc 1 195 26
 379 0036 304B     		ldr	r3, .L24
 380 0038 0022     		movs	r2, #0
 381 003a 9A60     		str	r2, [r3, #8]
 196:Core/Src/main.c ****   htim4.Init.Period = 65535;
 382              		.loc 1 196 21
 383 003c 2E4B     		ldr	r3, .L24
 384 003e 4FF6FF72 		movw	r2, #65535
 385 0042 DA60     		str	r2, [r3, #12]
 197:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 386              		.loc 1 197 28
 387 0044 2C4B     		ldr	r3, .L24
 388 0046 0022     		movs	r2, #0
 389 0048 1A61     		str	r2, [r3, #16]
 198:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 390              		.loc 1 198 32
 391 004a 2B4B     		ldr	r3, .L24
 392 004c 0022     		movs	r2, #0
 393 004e 9A61     		str	r2, [r3, #24]
 199:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 394              		.loc 1 199 7
 395 0050 2948     		ldr	r0, .L24
 396 0052 FFF7FEFF 		bl	HAL_TIM_Base_Init
 397 0056 0346     		mov	r3, r0
 398              		.loc 1 199 6
 399 0058 002B     		cmp	r3, #0
 400 005a 01D0     		beq	.L17
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 401              		.loc 1 201 5
 402 005c FFF7FEFF 		bl	Error_Handler
 403              	.L17:
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 404              		.loc 1 203 34
 405 0060 4FF48053 		mov	r3, #4096
 406 0064 BB61     		str	r3, [r7, #24]
 204:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 407              		.loc 1 204 7
 408 0066 07F11803 		add	r3, r7, #24
 409 006a 1946     		mov	r1, r3
 410 006c 2248     		ldr	r0, .L24
 411 006e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 412 0072 0346     		mov	r3, r0
 413              		.loc 1 204 6
 414 0074 002B     		cmp	r3, #0
 415 0076 01D0     		beq	.L18
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 416              		.loc 1 206 5
 417 0078 FFF7FEFF 		bl	Error_Handler
 418              	.L18:
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 419              		.loc 1 208 7
 420 007c 1E48     		ldr	r0, .L24
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 12


 421 007e FFF7FEFF 		bl	HAL_TIM_IC_Init
 422 0082 0346     		mov	r3, r0
 423              		.loc 1 208 6
 424 0084 002B     		cmp	r3, #0
 425 0086 01D0     		beq	.L19
 209:Core/Src/main.c ****   {
 210:Core/Src/main.c ****     Error_Handler();
 426              		.loc 1 210 5
 427 0088 FFF7FEFF 		bl	Error_Handler
 428              	.L19:
 211:Core/Src/main.c ****   }
 212:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 429              		.loc 1 212 37
 430 008c 0023     		movs	r3, #0
 431 008e 3B61     		str	r3, [r7, #16]
 213:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 432              		.loc 1 213 33
 433 0090 0023     		movs	r3, #0
 434 0092 7B61     		str	r3, [r7, #20]
 214:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 435              		.loc 1 214 7
 436 0094 07F11003 		add	r3, r7, #16
 437 0098 1946     		mov	r1, r3
 438 009a 1748     		ldr	r0, .L24
 439 009c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 440 00a0 0346     		mov	r3, r0
 441              		.loc 1 214 6
 442 00a2 002B     		cmp	r3, #0
 443 00a4 01D0     		beq	.L20
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 444              		.loc 1 216 5
 445 00a6 FFF7FEFF 		bl	Error_Handler
 446              	.L20:
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 447              		.loc 1 218 24
 448 00aa 0023     		movs	r3, #0
 449 00ac 3B60     		str	r3, [r7]
 219:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 450              		.loc 1 219 25
 451 00ae 0123     		movs	r3, #1
 452 00b0 7B60     		str	r3, [r7, #4]
 220:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 453              		.loc 1 220 25
 454 00b2 0023     		movs	r3, #0
 455 00b4 BB60     		str	r3, [r7, #8]
 221:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 456              		.loc 1 221 22
 457 00b6 0023     		movs	r3, #0
 458 00b8 FB60     		str	r3, [r7, #12]
 222:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 459              		.loc 1 222 7
 460 00ba 3B46     		mov	r3, r7
 461 00bc 0022     		movs	r2, #0
 462 00be 1946     		mov	r1, r3
 463 00c0 0D48     		ldr	r0, .L24
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 13


 464 00c2 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 465 00c6 0346     		mov	r3, r0
 466              		.loc 1 222 6
 467 00c8 002B     		cmp	r3, #0
 468 00ca 01D0     		beq	.L21
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 469              		.loc 1 224 5
 470 00cc FFF7FEFF 		bl	Error_Handler
 471              	.L21:
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_FALLING;
 472              		.loc 1 226 24
 473 00d0 0223     		movs	r3, #2
 474 00d2 3B60     		str	r3, [r7]
 227:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 475              		.loc 1 227 25
 476 00d4 0223     		movs	r3, #2
 477 00d6 7B60     		str	r3, [r7, #4]
 228:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 478              		.loc 1 228 7
 479 00d8 3B46     		mov	r3, r7
 480 00da 0422     		movs	r2, #4
 481 00dc 1946     		mov	r1, r3
 482 00de 0648     		ldr	r0, .L24
 483 00e0 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 484 00e4 0346     		mov	r3, r0
 485              		.loc 1 228 6
 486 00e6 002B     		cmp	r3, #0
 487 00e8 01D0     		beq	.L23
 229:Core/Src/main.c ****   {
 230:Core/Src/main.c ****     Error_Handler();
 488              		.loc 1 230 5
 489 00ea FFF7FEFF 		bl	Error_Handler
 490              	.L23:
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** }
 491              		.loc 1 236 1
 492 00ee 00BF     		nop
 493 00f0 2837     		adds	r7, r7, #40
 494              	.LCFI11:
 495              		.cfi_def_cfa_offset 8
 496 00f2 BD46     		mov	sp, r7
 497              	.LCFI12:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 00f4 80BD     		pop	{r7, pc}
 501              	.L25:
 502 00f6 00BF     		.align	2
 503              	.L24:
 504 00f8 00000000 		.word	htim4
 505 00fc 00080040 		.word	1073743872
 506              		.cfi_endproc
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 14


 507              	.LFE132:
 509              		.section	.text.MX_GPIO_Init,"ax",%progbits
 510              		.align	1
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 515              	MX_GPIO_Init:
 516              	.LFB133:
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /**
 239:Core/Src/main.c ****   * @brief GPIO Initialization Function
 240:Core/Src/main.c ****   * @param None
 241:Core/Src/main.c ****   * @retval None
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c **** static void MX_GPIO_Init(void)
 244:Core/Src/main.c **** {
 517              		.loc 1 244 1
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 40
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              	.LCFI13:
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 7, -8
 525              		.cfi_offset 14, -4
 526 0002 8AB0     		sub	sp, sp, #40
 527              	.LCFI14:
 528              		.cfi_def_cfa_offset 48
 529 0004 00AF     		add	r7, sp, #0
 530              	.LCFI15:
 531              		.cfi_def_cfa_register 7
 245:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 532              		.loc 1 245 20
 533 0006 07F11403 		add	r3, r7, #20
 534 000a 0022     		movs	r2, #0
 535 000c 1A60     		str	r2, [r3]
 536 000e 5A60     		str	r2, [r3, #4]
 537 0010 9A60     		str	r2, [r3, #8]
 538 0012 DA60     		str	r2, [r3, #12]
 539 0014 1A61     		str	r2, [r3, #16]
 540              	.LBB6:
 246:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 247:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 250:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 541              		.loc 1 250 3
 542 0016 0023     		movs	r3, #0
 543 0018 3B61     		str	r3, [r7, #16]
 544 001a 424B     		ldr	r3, .L27
 545 001c 1B6B     		ldr	r3, [r3, #48]
 546 001e 414A     		ldr	r2, .L27
 547 0020 43F00403 		orr	r3, r3, #4
 548 0024 1363     		str	r3, [r2, #48]
 549 0026 3F4B     		ldr	r3, .L27
 550 0028 1B6B     		ldr	r3, [r3, #48]
 551 002a 03F00403 		and	r3, r3, #4
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 15


 552 002e 3B61     		str	r3, [r7, #16]
 553 0030 3B69     		ldr	r3, [r7, #16]
 554              	.LBE6:
 555              	.LBB7:
 251:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 556              		.loc 1 251 3
 557 0032 0023     		movs	r3, #0
 558 0034 FB60     		str	r3, [r7, #12]
 559 0036 3B4B     		ldr	r3, .L27
 560 0038 1B6B     		ldr	r3, [r3, #48]
 561 003a 3A4A     		ldr	r2, .L27
 562 003c 43F08003 		orr	r3, r3, #128
 563 0040 1363     		str	r3, [r2, #48]
 564 0042 384B     		ldr	r3, .L27
 565 0044 1B6B     		ldr	r3, [r3, #48]
 566 0046 03F08003 		and	r3, r3, #128
 567 004a FB60     		str	r3, [r7, #12]
 568 004c FB68     		ldr	r3, [r7, #12]
 569              	.LBE7:
 570              	.LBB8:
 252:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 571              		.loc 1 252 3
 572 004e 0023     		movs	r3, #0
 573 0050 BB60     		str	r3, [r7, #8]
 574 0052 344B     		ldr	r3, .L27
 575 0054 1B6B     		ldr	r3, [r3, #48]
 576 0056 334A     		ldr	r2, .L27
 577 0058 43F00103 		orr	r3, r3, #1
 578 005c 1363     		str	r3, [r2, #48]
 579 005e 314B     		ldr	r3, .L27
 580 0060 1B6B     		ldr	r3, [r3, #48]
 581 0062 03F00103 		and	r3, r3, #1
 582 0066 BB60     		str	r3, [r7, #8]
 583 0068 BB68     		ldr	r3, [r7, #8]
 584              	.LBE8:
 585              	.LBB9:
 253:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 586              		.loc 1 253 3
 587 006a 0023     		movs	r3, #0
 588 006c 7B60     		str	r3, [r7, #4]
 589 006e 2D4B     		ldr	r3, .L27
 590 0070 1B6B     		ldr	r3, [r3, #48]
 591 0072 2C4A     		ldr	r2, .L27
 592 0074 43F00203 		orr	r3, r3, #2
 593 0078 1363     		str	r3, [r2, #48]
 594 007a 2A4B     		ldr	r3, .L27
 595 007c 1B6B     		ldr	r3, [r3, #48]
 596 007e 03F00203 		and	r3, r3, #2
 597 0082 7B60     		str	r3, [r7, #4]
 598 0084 7B68     		ldr	r3, [r7, #4]
 599              	.LBE9:
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 256:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 600              		.loc 1 256 3
 601 0086 0022     		movs	r2, #0
 602 0088 4FF40051 		mov	r1, #8192
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 16


 603 008c 2648     		ldr	r0, .L27+4
 604 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 259:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LED_1_Pin|LED_2_Pin|LED_3_Pin|LED_4_Pin
 605              		.loc 1 259 3
 606 0092 0022     		movs	r2, #0
 607 0094 F821     		movs	r1, #248
 608 0096 2548     		ldr	r0, .L27+8
 609 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 260:Core/Src/main.c ****                           |LED_5_Pin, GPIO_PIN_RESET);
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 263:Core/Src/main.c ****   HAL_GPIO_WritePin(HCSR04_TRIGGER_GPIO_Port, HCSR04_TRIGGER_Pin, GPIO_PIN_RESET);
 610              		.loc 1 263 3
 611 009c 0022     		movs	r2, #0
 612 009e 4FF40051 		mov	r1, #8192
 613 00a2 2348     		ldr	r0, .L27+12
 614 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 266:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 615              		.loc 1 266 23
 616 00a8 4FF40053 		mov	r3, #8192
 617 00ac 7B61     		str	r3, [r7, #20]
 267:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 618              		.loc 1 267 24
 619 00ae 0123     		movs	r3, #1
 620 00b0 BB61     		str	r3, [r7, #24]
 268:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 621              		.loc 1 268 24
 622 00b2 0023     		movs	r3, #0
 623 00b4 FB61     		str	r3, [r7, #28]
 269:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 624              		.loc 1 269 25
 625 00b6 0023     		movs	r3, #0
 626 00b8 3B62     		str	r3, [r7, #32]
 270:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 627              		.loc 1 270 3
 628 00ba 07F11403 		add	r3, r7, #20
 629 00be 1946     		mov	r1, r3
 630 00c0 1948     		ldr	r0, .L27+4
 631 00c2 FFF7FEFF 		bl	HAL_GPIO_Init
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /*Configure GPIO pins : LED_1_Pin LED_2_Pin LED_3_Pin LED_4_Pin
 273:Core/Src/main.c ****                            LED_5_Pin */
 274:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_1_Pin|LED_2_Pin|LED_3_Pin|LED_4_Pin
 632              		.loc 1 274 23
 633 00c6 F823     		movs	r3, #248
 634 00c8 7B61     		str	r3, [r7, #20]
 275:Core/Src/main.c ****                           |LED_5_Pin;
 276:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 635              		.loc 1 276 24
 636 00ca 0123     		movs	r3, #1
 637 00cc BB61     		str	r3, [r7, #24]
 277:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 638              		.loc 1 277 24
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 17


 639 00ce 0023     		movs	r3, #0
 640 00d0 FB61     		str	r3, [r7, #28]
 278:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 641              		.loc 1 278 25
 642 00d2 0023     		movs	r3, #0
 643 00d4 3B62     		str	r3, [r7, #32]
 279:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 644              		.loc 1 279 3
 645 00d6 07F11403 		add	r3, r7, #20
 646 00da 1946     		mov	r1, r3
 647 00dc 1348     		ldr	r0, .L27+8
 648 00de FFF7FEFF 		bl	HAL_GPIO_Init
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /*Configure GPIO pins : BUTTON_2_Pin BUTTON_1_Pin */
 282:Core/Src/main.c ****   GPIO_InitStruct.Pin = BUTTON_2_Pin|BUTTON_1_Pin;
 649              		.loc 1 282 23
 650 00e2 4FF41043 		mov	r3, #36864
 651 00e6 7B61     		str	r3, [r7, #20]
 283:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 652              		.loc 1 283 24
 653 00e8 0023     		movs	r3, #0
 654 00ea BB61     		str	r3, [r7, #24]
 284:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 655              		.loc 1 284 24
 656 00ec 0023     		movs	r3, #0
 657 00ee FB61     		str	r3, [r7, #28]
 285:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 658              		.loc 1 285 3
 659 00f0 07F11403 		add	r3, r7, #20
 660 00f4 1946     		mov	r1, r3
 661 00f6 0E48     		ldr	r0, .L27+12
 662 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /*Configure GPIO pin : HCSR04_TRIGGER_Pin */
 288:Core/Src/main.c ****   GPIO_InitStruct.Pin = HCSR04_TRIGGER_Pin;
 663              		.loc 1 288 23
 664 00fc 4FF40053 		mov	r3, #8192
 665 0100 7B61     		str	r3, [r7, #20]
 289:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 666              		.loc 1 289 24
 667 0102 0123     		movs	r3, #1
 668 0104 BB61     		str	r3, [r7, #24]
 290:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 669              		.loc 1 290 24
 670 0106 0023     		movs	r3, #0
 671 0108 FB61     		str	r3, [r7, #28]
 291:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 672              		.loc 1 291 25
 673 010a 0023     		movs	r3, #0
 674 010c 3B62     		str	r3, [r7, #32]
 292:Core/Src/main.c ****   HAL_GPIO_Init(HCSR04_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 675              		.loc 1 292 3
 676 010e 07F11403 		add	r3, r7, #20
 677 0112 1946     		mov	r1, r3
 678 0114 0648     		ldr	r0, .L27+12
 679 0116 FFF7FEFF 		bl	HAL_GPIO_Init
 293:Core/Src/main.c **** 
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 18


 294:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 295:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 296:Core/Src/main.c **** }
 680              		.loc 1 296 1
 681 011a 00BF     		nop
 682 011c 2837     		adds	r7, r7, #40
 683              	.LCFI16:
 684              		.cfi_def_cfa_offset 8
 685 011e BD46     		mov	sp, r7
 686              	.LCFI17:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 0120 80BD     		pop	{r7, pc}
 690              	.L28:
 691 0122 00BF     		.align	2
 692              	.L27:
 693 0124 00380240 		.word	1073887232
 694 0128 00080240 		.word	1073874944
 695 012c 00000240 		.word	1073872896
 696 0130 00040240 		.word	1073873920
 697              		.cfi_endproc
 698              	.LFE133:
 700              		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 701              		.align	1
 702              		.global	HAL_TIM_IC_CaptureCallback
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 707              	HAL_TIM_IC_CaptureCallback:
 708              	.LFB134:
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
 301:Core/Src/main.c **** {
 709              		.loc 1 301 1
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 8
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713 0000 80B5     		push	{r7, lr}
 714              	.LCFI18:
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              	.LCFI19:
 720              		.cfi_def_cfa_offset 16
 721 0004 00AF     		add	r7, sp, #0
 722              	.LCFI20:
 723              		.cfi_def_cfa_register 7
 724 0006 7860     		str	r0, [r7, #4]
 302:Core/Src/main.c ****   if(htim == &htim4)
 725              		.loc 1 302 5
 726 0008 7B68     		ldr	r3, [r7, #4]
 727 000a 0E4A     		ldr	r2, .L32
 728 000c 9342     		cmp	r3, r2
 729 000e 14D1     		bne	.L31
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 19


 303:Core/Src/main.c ****   { 
 304:Core/Src/main.c ****     if (htim4.Channel == HAL_TIM_ACTIVE_CHANNEL_2)
 730              		.loc 1 304 14
 731 0010 0C4B     		ldr	r3, .L32
 732 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 733              		.loc 1 304 8
 734 0014 022B     		cmp	r3, #2
 735 0016 10D1     		bne	.L31
 305:Core/Src/main.c ****     {   
 306:Core/Src/main.c ****       gElapsed = htim4.Instance->CCR2 - htim4.Instance->CCR1;   
 736              		.loc 1 306 23
 737 0018 0A4B     		ldr	r3, .L32
 738 001a 1B68     		ldr	r3, [r3]
 739              		.loc 1 306 32
 740 001c 9A6B     		ldr	r2, [r3, #56]
 741              		.loc 1 306 46
 742 001e 094B     		ldr	r3, .L32
 743 0020 1B68     		ldr	r3, [r3]
 744              		.loc 1 306 55
 745 0022 5B6B     		ldr	r3, [r3, #52]
 746              		.loc 1 306 39
 747 0024 D31A     		subs	r3, r2, r3
 748              		.loc 1 306 16
 749 0026 084A     		ldr	r2, .L32+4
 750 0028 1360     		str	r3, [r2]
 307:Core/Src/main.c ****       HAL_TIM_IC_Stop(&htim4, TIM_CHANNEL_1);
 751              		.loc 1 307 7
 752 002a 0021     		movs	r1, #0
 753 002c 0548     		ldr	r0, .L32
 754 002e FFF7FEFF 		bl	HAL_TIM_IC_Stop
 308:Core/Src/main.c ****       HAL_TIM_IC_Stop_IT(&htim4, TIM_CHANNEL_2);       
 755              		.loc 1 308 7
 756 0032 0421     		movs	r1, #4
 757 0034 0348     		ldr	r0, .L32
 758 0036 FFF7FEFF 		bl	HAL_TIM_IC_Stop_IT
 759              	.L31:
 309:Core/Src/main.c ****     }
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c **** }
 760              		.loc 1 311 1
 761 003a 00BF     		nop
 762 003c 0837     		adds	r7, r7, #8
 763              	.LCFI21:
 764              		.cfi_def_cfa_offset 8
 765 003e BD46     		mov	sp, r7
 766              	.LCFI22:
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 0040 80BD     		pop	{r7, pc}
 770              	.L33:
 771 0042 00BF     		.align	2
 772              	.L32:
 773 0044 00000000 		.word	htim4
 774 0048 00000000 		.word	gElapsed
 775              		.cfi_endproc
 776              	.LFE134:
 778              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 20


 779              		.align	1
 780              		.global	Error_Handler
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 785              	Error_Handler:
 786              	.LFB135:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /* USER CODE END 4 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /**
 316:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 317:Core/Src/main.c ****   * @retval None
 318:Core/Src/main.c ****   */
 319:Core/Src/main.c **** void Error_Handler(void)
 320:Core/Src/main.c **** {
 787              		.loc 1 320 1
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792 0000 80B4     		push	{r7}
 793              	.LCFI23:
 794              		.cfi_def_cfa_offset 4
 795              		.cfi_offset 7, -4
 796 0002 00AF     		add	r7, sp, #0
 797              	.LCFI24:
 798              		.cfi_def_cfa_register 7
 799              	.LBB10:
 800              	.LBB11:
 801              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 21


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 22


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 23


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 802              		.loc 2 142 3
 803              		.syntax unified
 804              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 805 0004 72B6     		cpsid i
 806              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 807              		.loc 2 143 1
 808              		.thumb
 809              		.syntax unified
 810 0006 00BF     		nop
 811              	.L35:
 812              	.LBE11:
 813              	.LBE10:
 321:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 322:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 323:Core/Src/main.c ****   __disable_irq();
 324:Core/Src/main.c ****   while (1)
 814              		.loc 1 324 9 discriminator 1
 815 0008 00BF     		nop
 816 000a FDE7     		b	.L35
 817              		.cfi_endproc
 818              	.LFE135:
 820              		.text
 821              	.Letext0:
 822              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 823              		.file 4 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin/../lib/gcc/arm-none-eabi/12.3.1/../
 824              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 825              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 826              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 827              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 828              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 829              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 830              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 831              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 832              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:25     .bss.htim4:00000000 htim4
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:22     .bss.htim4:00000000 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:32     .bss.gElapsed:00000000 gElapsed
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:29     .bss.gElapsed:00000000 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:35     .text.main:00000000 $t
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:41     .text.main:00000000 main
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:187    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:515    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:334    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:172    .text.main:000000d0 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:181    .text.SystemClock_Config:00000000 $t
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:785    .text.Error_Handler:00000000 Error_Handler
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:323    .text.SystemClock_Config:000000c8 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:329    .text.MX_TIM4_Init:00000000 $t
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:504    .text.MX_TIM4_Init:000000f8 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:510    .text.MX_GPIO_Init:00000000 $t
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:693    .text.MX_GPIO_Init:00000124 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:701    .text.HAL_TIM_IC_CaptureCallback:00000000 $t
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:707    .text.HAL_TIM_IC_CaptureCallback:00000000 HAL_TIM_IC_CaptureCallback
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:773    .text.HAL_TIM_IC_CaptureCallback:00000044 $d
C:\Users\stryk\AppData\Local\Temp\cc3NnBqo.s:779    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_TIM_IC_Start
HAL_TIM_IC_Start_IT
HAL_GPIO_ReadPin
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_GPIO_Init
HAL_TIM_IC_Stop
HAL_TIM_IC_Stop_IT
